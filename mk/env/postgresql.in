### VARs from 'configure.ac'
export POSTGRES_AUTH_METHOD        ?= @POSTGRES_AUTH_METHOD@
export POSTGRES_HOST               ?= @POSTGRES_HOST@
export POSTGRES_MAJOR_VERSION      ?= @POSTGRES_MAJOR_VERSION@
export POSTGRES_MIGRATIONS         ?= @POSTGRES_MIGRATIONS@
export POSTGRES_PORT               ?= @POSTGRES_PORT@
export POSTGRES_SUPERUSER          ?= @POSTGRES_SUPERUSER@
export POSTGRES_SUPERUSER_DB       ?= @POSTGRES_SUPERUSER_DB@
export POSTGRES_SUPERUSER_PASSWORD ?= @POSTGRES_SUPERUSER_PASSWORD@
export POSTGRES_USER               ?= @POSTGRES_USER@
export POSTGRES_USER_DB            ?= @POSTGRES_USER_DB@
export POSTGRES_USER_PASSWORD      ?= @POSTGRES_USER_PASSWORD@

### Derived VARs
export POSTGRES_ARTEFACTS_DIR := $(ARTEFACTS)/postgresql
export TARGET_INIT_DIR        := $(POSTGRES_ARTEFACTS_DIR)/.target
export TARGET_INIT_ROLE       := $(POSTGRES_ARTEFACTS_DIR)/.target-postgresql-for-user-$(POSTGRES_USER)-and-db-$(POSTGRES_USER_DB)

### Conditional VARs
# For 'check-superuser' command 'psql' is run behalf privileged postgres user 'POSTGRES_SUPERUSER' 
#   with password 'POSTGRES_SUPERUSER' and db 'POSTGRES_SUPERUSER_DB'
# For 'migrate' and 'revert' and 'check-user' command 'psql' is run behalf 'POSTGRES_USER' 
#   with password 'PASSWORD' and db 'POSTGRES_USER_DB'
ifeq ($(POSTGRES_AUTH_METHOD),remote)
    PSQL_SUPERUSER := PGUSER=$(POSTGRES_SUPERUSER) PGPASSWORD=$(POSTGRES_SUPERUSER_PASSWORD) PGDATABASE=$(POSTGRES_SUPERUSER_DB) psql -h $(POSTGRES_HOST)
    PSQL := PGUSER=$(POSTGRES_USER) PGPASSWORD=$(POSTGRES_USER_PASSWORD) PGDATABASE=$(POSTGRES_USER_DB) psql -h $(POSTGRES_HOST)
else ifeq ($(POSTGRES_AUTH_METHOD),peer)
    PSQL_SUPERUSER := PGUSER=$(POSTGRES_SUPERUSER) PGDATABASE=$(POSTGRES_SUPERUSER_DB) psql
    PSQL := PGUSER=$(POSTGRES_USER) PGDATABASE=$(POSTGRES_USER_DB) psql
else ifeq ($(POSTGRES_AUTH_METHOD),docker)
    PSQL_SUPERUSER := docker exec -ti -e PGUSER=$(POSTGRES_SUPERUSER) -e PGDATABASE=$(POSTGRES_SUPERUSER_DB) sodb psql
    PSQL := docker exec -ti -e PGUSER=$(POSTGRES_USER) -e PGDATABASE=$(POSTGRES_USER_DB) sodb psql
else
    $(error Unsupported value for 'POSTGRES_AUTH_METHOD' variable.)
endif

export PSQL_SUPERUSER
export PSQL

ENVs += \
	POSTGRES_AUTH_METHOD \
	POSTGRES_HOST \
	POSTGRES_MAJOR_VERSION \
	POSTGRES_MIGRATIONS \
	POSTGRES_PORT \
	POSTGRES_SUPERUSER \
	POSTGRES_SUPERUSER_DB \
	POSTGRES_SUPERUSER_PASSWORD \
	POSTGRES_USER \
	POSTGRES_USER_DB \
	POSTGRES_USER_PASSWORD \
	PSQL \
	PSQL_SUPERUSER